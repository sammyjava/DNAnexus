#!/bin/bash
# tophat-fasta 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://wiki.dnanexus.com/Developer-Portal for tutorials on how
# to modify this file.

main() {

    echo "Value of target_fasta_gz: '$target_fasta_gz'"
    echo "Value of reads_1_fq_gz: '$reads_1_fq_gz'"
    echo "Value of reads_2_fq_gz: '$reads_2_fq_gz'"
    echo "Value of mate_inner_dist: '$mate_inner_dist'"

    # The following line(s) use the dx command-line tool to download your file
    # inputs to the local file system using variable names for the filenames. To
    # recover the original filenames, you can use the output of "dx describe
    # "$variable" --name".

    dx download "$target_fasta_gz" -o target.fa.gz

    dx download "$reads_1_fq_gz" -o reads_1.fq.gz

    dx download "$reads_2_fq_gz" -o reads_2.fq.gz

    # Fill in your application code here.
    #
    # To report any recognized errors in the correct format in
    # $HOME/job_error.json and exit this script, you can use the
    # dx-jobutil-report-error utility as follows:
    #
    #   dx-jobutil-report-error "My error message"
    #
    # Note however that this entire bash script is executed with -e
    # when running in the cloud, so any line which returns a nonzero
    # exit code will prematurely exit the script; if no error was
    # reported in the job_error.json file, then the failure reason
    # will be AppInternalError with a generic error message.

    gunzip target.fa.gz

    bowtie2-build target.fa target

    tophat -r $mate_inner_dist target reads_1.fq.gz reads_2.fq.gz

    tar czf tophat_out.tar.gz tophat_out

    # The following line(s) use the dx command-line tool to upload your file
    # outputs after you have created them on the local file system.  It assumes
    # that you have used the output field name for the filename for each output,
    # but you can change that behavior to suit your needs.  Run "dx upload -h"
    # to see more options to set metadata.

    tophat_out_tar_gz=$(dx upload tophat_out.tar.gz --brief)

    # The following line(s) use the utility dx-jobutil-add-output to format and
    # add output variables to your job's output as appropriate for the output
    # class.  Run "dx-jobutil-add-output -h" for more information on what it
    # does.

    dx-jobutil-add-output tophat_out_tar_gz "$tophat_out_tar_gz" --class=file
}
