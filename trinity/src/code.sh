#!/bin/bash
# trinity 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://wiki.dnanexus.com/Developer-Portal for tutorials on how
# to modify this file.

main() {

    echo "Value of left_reads_fq_gz: '${left_reads_fq_gz[@]}'"
    echo "Value of right_reads_fq_gz: '${right_reads_fq_gz[@]}'"

    # The following line(s) use the dx command-line tool to download your file
    # inputs to the local file system using variable names for the filenames. To
    # recover the original filenames, you can use the output of "dx describe
    # "$variable" --name".

    left_inputs=""
    for i in ${!left_reads_fq_gz[@]}
    do
        dx download "${left_reads_fq_gz[$i]}" -o left_reads-$i.fq.gz
	md5sum left_reads-$i.fq.gz
	left_inputs="$left_inputs left_reads-$i.fq.gz"
    done

    right_inputs=""
    for i in ${!right_reads_fq_gz[@]}
    do
        dx download "${right_reads_fq_gz[$i]}" -o right_reads-$i.fq.gz
	md5sum right_reads-$i.fq.gz
	right_inputs="$right_inputs right_reads-$i.fq.gz"
    done

    export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64
    export PATH=$JAVA_HOME/bin:$PATH

    # NOTE: max_memory and CPU cores are hardcoded and should be less than what's specified in dxapp.json
    echo "free -g output:"
    free -g
    
    /trinityrnaseq/Trinity --no_cleanup --seqType fq --max_memory 48G --CPU 32 --left ${left_inputs} --right ${right_inputs}

    tar czf trinity_out_dir.tar.gz trinity_out_dir
    
    # The following line(s) use the dx command-line tool to upload your file
    # outputs after you have created them on the local file system.  It assumes
    # that you have used the output field name for the filename for each output,
    # but you can change that behavior to suit your needs.  Run "dx upload -h"
    # to see more options to set metadata.

    trinity_output_dir_tar_gz=$(dx upload trinity_out_dir.tar.gz --brief)

    # The following line(s) use the utility dx-jobutil-add-output to format and
    # add output variables to your job's output as appropriate for the output
    # class.  Run "dx-jobutil-add-output -h" for more information on what it
    # does.

    dx-jobutil-add-output trinity_output_dir_tar_gz "$trinity_output_dir_tar_gz" --class=file
}
